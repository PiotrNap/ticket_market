{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/piotrnapierala/Desktop/microservices/ticketing/client/pages/dashboard/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport { Fragment } from 'react';\nimport paths from '../../paths';\nimport HeroSection from '../../components/hero/heroDashboard';\n\nvar DashboardIndex = function DashboardIndex(_ref) {\n  var currentUser = _ref.currentUser,\n      tickets = _ref.tickets,\n      _ref$title = _ref.title,\n      title = _ref$title === void 0 ? 'Welcome to Ticket Market!' : _ref$title;\n  return __jsx(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, title)), __jsx(HeroSection, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }));\n};\n\n_c = DashboardIndex;\n\nDashboardIndex.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context, client, currentUser) {\n    var _yield$client$get, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return client.get(\"\".concat(paths.tickets));\n\n          case 2:\n            _yield$client$get = _context.sent;\n            data = _yield$client$get.data;\n            return _context.abrupt(\"return\", {\n              tickets: data\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default DashboardIndex;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardIndex\");","map":{"version":3,"sources":["/Users/piotrnapierala/Desktop/microservices/ticketing/client/pages/dashboard/index.js"],"names":["Link","Head","Fragment","paths","HeroSection","DashboardIndex","currentUser","tickets","title","getInitialProps","context","client","get","data"],"mappings":";;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAIjB;AAAA,MAHJC,WAGI,QAHJA,WAGI;AAAA,MAFJC,OAEI,QAFJA,OAEI;AAAA,wBADJC,KACI;AAAA,MADJA,KACI,2BADI,2BACJ;AACJ,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,KAAR,CADF,CADF,EAIE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD,CAbD;;KAAMH,c;;AAeNA,cAAc,CAACI,eAAf;AAAA,uEAAiC,iBAAOC,OAAP,EAAgBC,MAAhB,EAAwBL,WAAxB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACRK,MAAM,CAACC,GAAP,WAAcT,KAAK,CAACI,OAApB,EADQ;;AAAA;AAAA;AACvBM,YAAAA,IADuB,qBACvBA,IADuB;AAAA,6CAGxB;AAAEN,cAAAA,OAAO,EAAEM;AAAX,aAHwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjC;;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAeR,cAAf","sourcesContent":["import Link from 'next/link';\nimport Head from 'next/head';\nimport { Fragment } from 'react';\nimport paths from '../../paths';\nimport HeroSection from '../../components/hero/heroDashboard';\n\nconst DashboardIndex = ({\n  currentUser,\n  tickets,\n  title = 'Welcome to Ticket Market!',\n}) => {\n  return (\n    <Fragment>\n      <Head>\n        <title>{title}</title>\n      </Head>\n      <HeroSection />\n    </Fragment>\n  );\n};\n\nDashboardIndex.getInitialProps = async (context, client, currentUser) => {\n  const { data } = await client.get(`${paths.tickets}`);\n\n  return { tickets: data };\n};\n\nexport default DashboardIndex;\n"]},"metadata":{},"sourceType":"module"}