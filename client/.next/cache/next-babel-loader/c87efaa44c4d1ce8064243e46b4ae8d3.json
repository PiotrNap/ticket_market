{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport Router from 'next/router';\nimport useRequest from '../../hooks/use-request';\nexport default (function () {\n  // hooks ->\n  var _useState = useState(''),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(''),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useRequest = useRequest({\n    url: '/api/users/signin',\n    method: 'post',\n    body: {\n      email: email,\n      password: password\n    },\n    onSuccess: function onSuccess() {\n      return Router.push('/dashboard');\n    }\n  }),\n      doRequest = _useRequest.doRequest,\n      errors = _useRequest.errors;\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              doRequest();\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"form\", {\n    onSubmit: onSubmit\n  }, __jsx(\"h1\", null, \"Sign In\"), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Email Address\"), __jsx(\"input\", {\n    value: email,\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    className: \"form-control\"\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Password\"), __jsx(\"input\", {\n    value: password,\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    type: \"password\",\n    className: \"form-control\"\n  })), errors, __jsx(\"button\", {\n    className: \"btn btn-primary\"\n  }, \"Sign In\"));\n});","map":null,"metadata":{},"sourceType":"module"}