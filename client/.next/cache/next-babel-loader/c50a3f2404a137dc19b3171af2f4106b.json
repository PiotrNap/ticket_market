{"ast":null,"code":"var _jsxFileName = \"/Users/piotrnapierala/Desktop/microservices/ticketing/client/components/menu.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport IconSignup from './icons/signup';\nimport paths from '../paths';\nimport styled from 'styled-components';\nimport theme from './styles/theme';\nconst {\n  colors,\n  fontSizes\n} = theme;\nconst StyledList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  li {\n    padding: 15px 10px;\n    font-size: ${fontSizes.large};\n    font-weight: 500;\n    cursor: pointer;\n\n    svg {\n      height: 1.2rem;\n      width: auto;\n      margin-left: 0.5rem;\n      align-content:\n    }\n\n    :hover,\n    :active {\n      color: ${colors.purple};\n    }\n  }\n`;\nconst StyledListPoint = styled.li``;\nconst StyledAnchor = styled.a``;\nconst StyledIcon = styled.div``;\nconst {\n  signin,\n  signup,\n  orders,\n  signout,\n  ticketNew\n} = paths;\nexport default (({\n  currentUser\n}) => {\n  const links = [!currentUser && {\n    label: 'Sign Up',\n    href: `${signup}`,\n    icon: __jsx(IconSignup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    })\n  }, !currentUser && {\n    label: 'Sign In',\n    href: `${signin}`\n  }, currentUser && {\n    label: 'Sell tickets',\n    href: `${ticketNew}`\n  }, currentUser && {\n    label: 'My Orders',\n    href: `${orders}`\n  }, currentUser && {\n    label: 'Sign Out',\n    href: `${signout}`\n  }].filter(linkConfig => linkConfig) // filter which are falsy\n  .map(({\n    label,\n    href,\n    icon\n  }) => {\n    return __jsx(StyledListPoint, {\n      key: href,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, __jsx(Link, {\n      href: href,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, label, icon)));\n  });\n  return __jsx(StyledList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, links, __jsx(StyledIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, __jsx(IconSignup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  })));\n});","map":{"version":3,"sources":["/Users/piotrnapierala/Desktop/microservices/ticketing/client/components/menu.js"],"names":["Link","IconSignup","paths","styled","theme","colors","fontSizes","StyledList","ul","large","purple","StyledListPoint","li","StyledAnchor","a","StyledIcon","div","signin","signup","orders","signout","ticketNew","currentUser","links","label","href","icon","filter","linkConfig","map"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,MAAM;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,IAAwBF,KAA9B;AAEA,MAAMG,UAAU,GAAGJ,MAAM,CAACK,EAAG;;;;;;;iBAOZF,SAAS,CAACG,KAAM;;;;;;;;;;;;;eAalBJ,MAAM,CAACK,MAAO;;;CApB7B;AAyBA,MAAMC,eAAe,GAAGR,MAAM,CAACS,EAAG,EAAlC;AAEA,MAAMC,YAAY,GAAGV,MAAM,CAACW,CAAE,EAA9B;AAEA,MAAMC,UAAU,GAAGZ,MAAM,CAACa,GAAI,EAA9B;AAEA,MAAM;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,MAAV;AAAkBC,EAAAA,MAAlB;AAA0BC,EAAAA,OAA1B;AAAmCC,EAAAA;AAAnC,IAAiDnB,KAAvD;AAEA,gBAAe,CAAC;AAAEoB,EAAAA;AAAF,CAAD,KAAqB;AAClC,QAAMC,KAAK,GAAG,CACZ,CAACD,WAAD,IAAgB;AACdE,IAAAA,KAAK,EAAE,SADO;AAEdC,IAAAA,IAAI,EAAG,GAAEP,MAAO,EAFF;AAGdQ,IAAAA,IAAI,EAAE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHQ,GADJ,EAMZ,CAACJ,WAAD,IAAgB;AAAEE,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,IAAI,EAAG,GAAER,MAAO;AAApC,GANJ,EAOZK,WAAW,IAAI;AAAEE,IAAAA,KAAK,EAAE,cAAT;AAAyBC,IAAAA,IAAI,EAAG,GAAEJ,SAAU;AAA5C,GAPH,EAQZC,WAAW,IAAI;AAAEE,IAAAA,KAAK,EAAE,WAAT;AAAsBC,IAAAA,IAAI,EAAG,GAAEN,MAAO;AAAtC,GARH,EASZG,WAAW,IAAI;AAAEE,IAAAA,KAAK,EAAE,UAAT;AAAqBC,IAAAA,IAAI,EAAG,GAAEL,OAAQ;AAAtC,GATH,EAWXO,MAXW,CAWHC,UAAD,IAAgBA,UAXZ,EAWwB;AAXxB,GAYXC,GAZW,CAYP,CAAC;AAAEL,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA;AAAf,GAAD,KAA2B;AAC9B,WACE,MAAC,eAAD;AAAiB,MAAA,GAAG,EAAED,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,KADH,EAEGE,IAFH,CADF,CADF,CADF;AAUD,GAvBW,CAAd;AAyBA,SACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KADH,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF;AAQD,CAlCD","sourcesContent":["import Link from 'next/link';\nimport IconSignup from './icons/signup';\nimport paths from '../paths';\nimport styled from 'styled-components';\nimport theme from './styles/theme';\n\nconst { colors, fontSizes } = theme;\n\nconst StyledList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  li {\n    padding: 15px 10px;\n    font-size: ${fontSizes.large};\n    font-weight: 500;\n    cursor: pointer;\n\n    svg {\n      height: 1.2rem;\n      width: auto;\n      margin-left: 0.5rem;\n      align-content:\n    }\n\n    :hover,\n    :active {\n      color: ${colors.purple};\n    }\n  }\n`;\n\nconst StyledListPoint = styled.li``;\n\nconst StyledAnchor = styled.a``;\n\nconst StyledIcon = styled.div``;\n\nconst { signin, signup, orders, signout, ticketNew } = paths;\n\nexport default ({ currentUser }) => {\n  const links = [\n    !currentUser && {\n      label: 'Sign Up',\n      href: `${signup}`,\n      icon: <IconSignup />,\n    },\n    !currentUser && { label: 'Sign In', href: `${signin}` },\n    currentUser && { label: 'Sell tickets', href: `${ticketNew}` },\n    currentUser && { label: 'My Orders', href: `${orders}` },\n    currentUser && { label: 'Sign Out', href: `${signout}` },\n  ]\n    .filter((linkConfig) => linkConfig) // filter which are falsy\n    .map(({ label, href, icon }) => {\n      return (\n        <StyledListPoint key={href}>\n          <Link href={href}>\n            <span>\n              {label}\n              {icon}\n            </span>\n          </Link>\n        </StyledListPoint>\n      );\n    });\n\n  return (\n    <StyledList>\n      {links}\n      <StyledIcon>\n        <IconSignup />\n      </StyledIcon>\n    </StyledList>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}