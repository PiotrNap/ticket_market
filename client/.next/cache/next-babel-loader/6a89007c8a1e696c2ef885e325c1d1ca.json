{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/piotrnapierala/Desktop/microservices/ticketing/client/pages/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\n\nvar LandingPage = function LandingPage(_ref) {\n  var currentUser = _ref.currentUser,\n      tickets = _ref.tickets;\n  var ticketList = tickets.map(function (ticket) {\n    return __jsx(\"tr\", {\n      key: ticket.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 7\n      }\n    }, __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }\n    }, ticket.title), __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }\n    }, ticket.price), __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }\n    }, __jsx(Link, {\n      href: \"/tickets/[ticketId]\",\n      as: \"/tickets/\".concat(ticket.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    }, \"View\"))));\n  });\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, \"tickets\"), __jsx(\"table\", {\n    className: \"table\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, __jsx(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"Title\"), __jsx(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"Price\"), __jsx(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"Link\"))), __jsx(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, ticketList)));\n};\n\nLandingPage.getInitialProps = function _callee(context, client, currentUser) {\n  var _await$client$get, data;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(client.get('/api/tickets'));\n\n        case 2:\n          _await$client$get = _context.sent;\n          data = _await$client$get.data;\n          return _context.abrupt(\"return\", {\n            tickets: data\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default LandingPage;","map":{"version":3,"sources":["/Users/piotrnapierala/Desktop/microservices/ticketing/client/pages/index.js"],"names":["Link","LandingPage","currentUser","tickets","ticketList","map","ticket","id","title","price","getInitialProps","context","client","get","data"],"mappings":";;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAA8B;AAAA,MAA3BC,WAA2B,QAA3BA,WAA2B;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAChD,MAAMC,UAAU,GAAGD,OAAO,CAACE,GAAR,CAAY,UAACC,MAAD,EAAY;AACzC,WACE;AAAI,MAAA,GAAG,EAAEA,MAAM,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,MAAM,CAACE,KAAZ,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,MAAM,CAACG,KAAZ,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,qBAAX;AAAiC,MAAA,EAAE,qBAAcH,MAAM,CAACC,EAArB,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,CAHF,CADF;AAWD,GAZkB,CAAnB;AAcA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQH,UAAR,CARF,CAFF,CADF;AAeD,CA9BD;;AAgCAH,WAAW,CAACS,eAAZ,GAA8B,iBAAOC,OAAP,EAAgBC,MAAhB,EAAwBV,WAAxB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACLU,MAAM,CAACC,GAAP,CAAW,cAAX,CADK;;AAAA;AAAA;AACpBC,UAAAA,IADoB,qBACpBA,IADoB;AAAA,2CAGrB;AAAEX,YAAAA,OAAO,EAAEW;AAAX,WAHqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9B;;AAMA,eAAeb,WAAf","sourcesContent":["import Link from 'next/link';\n\nconst LandingPage = ({ currentUser, tickets }) => {\n  const ticketList = tickets.map((ticket) => {\n    return (\n      <tr key={ticket.id}>\n        <td>{ticket.title}</td>\n        <td>{ticket.price}</td>\n        <td>\n          <Link href='/tickets/[ticketId]' as={`/tickets/${ticket.id}`}>\n            <a>View</a>\n          </Link>\n        </td>\n      </tr>\n    );\n  });\n\n  return (\n    <div>\n      <h1>tickets</h1>\n      <table className='table'>\n        <thead>\n          <tr>\n            <th>Title</th>\n            <th>Price</th>\n            <th>Link</th>\n          </tr>\n        </thead>\n        <tbody>{ticketList}</tbody>\n      </table>\n    </div>\n  );\n};\n\nLandingPage.getInitialProps = async (context, client, currentUser) => {\n  const { data } = await client.get('/api/tickets');\n\n  return { tickets: data };\n};\n\nexport default LandingPage;\n"]},"metadata":{},"sourceType":"module"}