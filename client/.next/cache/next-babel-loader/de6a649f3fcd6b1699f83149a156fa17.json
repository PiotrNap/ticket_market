{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/piotrnapierala/Desktop/microservices/ticketing/client/pages/dashboard/user.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport { Fragment } from 'react';\nimport paths from '../../paths'; // insert - tickets !!\n\nvar DashboardIndex = function DashboardIndex(_ref) {\n  var currentUser = _ref.currentUser,\n      ticket = _ref.ticket,\n      _ref$title = _ref.title,\n      title = _ref$title === void 0 ? 'Welcome to Your Dashboard' : _ref$title;\n  var ticketList = tickets.map(function (ticket) {\n    return __jsx(\"tr\", {\n      key: ticket.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, ticket.title), __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, ticket.price), __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, __jsx(Link, {\n      href: \"/tickets/[ticketId]\",\n      as: \"/tickets/\".concat(ticket.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, \"View\"))));\n  });\n  return __jsx(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, title)), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Tickets\"), __jsx(\"table\", {\n    className: \"table\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, __jsx(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, __jsx(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, \"Title\"), __jsx(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, \"Price\"), __jsx(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }, \"Link\"))), __jsx(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, ticketList))));\n}; // DashboardIndex.getInitialProps = async (context, client, currentUser) => {\n//   const { data } = await client.get(`${paths.tickets}`);\n//   return { tickets: data };\n// };\n\n\n_c = DashboardIndex;\nexport default DashboardIndex;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardIndex\");","map":{"version":3,"sources":["/Users/piotrnapierala/Desktop/microservices/ticketing/client/pages/dashboard/user.js"],"names":["Link","Head","Fragment","paths","DashboardIndex","currentUser","ticket","title","ticketList","tickets","map","id","price"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAGA;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAIjB;AAAA,MAHJC,WAGI,QAHJA,WAGI;AAAA,MAFJC,MAEI,QAFJA,MAEI;AAAA,wBADJC,KACI;AAAA,MADJA,KACI,2BADI,2BACJ;AACJ,MAAMC,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAY,UAACJ,MAAD,EAAY;AACzC,WACE;AAAI,MAAA,GAAG,EAAEA,MAAM,CAACK,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKL,MAAM,CAACC,KAAZ,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,MAAM,CAACM,KAAZ,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,qBAAX;AAAiC,MAAA,EAAE,qBAAcN,MAAM,CAACK,EAArB,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,CAHF,CADF;AAWD,GAZkB,CAAnB;AAcA,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQJ,KAAR,CADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQC,UAAR,CARF,CAFF,CAJF,CADF;AAoBD,CAvCD,C,CAyCA;AACA;AAEA;AACA;;;KA7CMJ,c;AA+CN,eAAeA,cAAf","sourcesContent":["import Link from 'next/link';\nimport Head from 'next/head';\nimport { Fragment } from 'react';\nimport paths from '../../paths';\n\n\n// insert - tickets !!\nconst DashboardIndex = ({\n  currentUser,\n  ticket,\n  title = 'Welcome to Your Dashboard',\n}) => {\n  const ticketList = tickets.map((ticket) => {\n    return (\n      <tr key={ticket.id}>\n        <td>{ticket.title}</td>\n        <td>{ticket.price}</td>\n        <td>\n          <Link href='/tickets/[ticketId]' as={`/tickets/${ticket.id}`}>\n            <a>View</a>\n          </Link>\n        </td>\n      </tr>\n    );\n  });\n\n  return (\n    <Fragment>\n      <Head>\n        <title>{title}</title>\n      </Head>\n      <div>\n        <h1>Tickets</h1>\n        <table className='table'>\n          <thead>\n            <tr>\n              <th>Title</th>\n              <th>Price</th>\n              <th>Link</th>\n            </tr>\n          </thead>\n          <tbody>{ticketList}</tbody>\n        </table>\n      </div>\n    </Fragment>\n  );\n};\n\n// DashboardIndex.getInitialProps = async (context, client, currentUser) => {\n//   const { data } = await client.get(`${paths.tickets}`);\n\n//   return { tickets: data };\n// };\n\nexport default DashboardIndex;\n"]},"metadata":{},"sourceType":"module"}