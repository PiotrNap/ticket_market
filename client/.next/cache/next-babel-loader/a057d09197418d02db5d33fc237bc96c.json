{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport theme from '../components/styles/theme';\nimport { device } from '../components/styles/device';\nimport styled from 'styled-components';\nvar colors = theme.colors,\n    fontSizes = theme.fontSizes;\nvar StyledForm = styled(Form).withConfig({\n  displayName: \"register__StyledForm\",\n  componentId: \"sc-1h70zzu-0\"\n})([\"display:flex;flex-direction:column;align-items:center;label{font-size:\", \";font-weight:600;color:\", \";margin-bottom:1.5rem;}input{outline:none;border:2.5px solid \", \";border-radius:100px;padding:0.5rem 2.6rem;background-color:\", \";font-size:\", \";@media \", \"{border:2.1px solid \", \";}}button{padding:0.6rem 5.4rem;color:\", \";font-size:\", \";font-weight:600;background-color:\", \";border-radius:100px;transition:all 0.2s;margin-top:\", \";:focus,:hover{color:\", \";background-color:\", \";}}\"], fontSizes.Xlarge, colors.lightText, colors.purple, colors.white, fontSizes.large, device.mobileL, colors.purple, colors.white, fontSizes.normal, colors.purple, theme.mbSm, colors.purple, colors.white);\nvar StyledError = styled(ErrorMessage).withConfig({\n  displayName: \"register__StyledError\",\n  componentId: \"sc-1h70zzu-1\"\n})([\"\"]);\nexport default (function () {\n  return __jsx(Formik, {\n    onSubmit: /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return new Promise(function (res) {\n                  return setTimeout(res, 500);\n                });\n\n              case 2:\n                alert(JSON.stringify(values, null, 2));\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }(),\n    initialValues: {\n      email: ''\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email('You should change something!').required('Your email is required.')\n    })\n  }, function (_ref2) {\n    var isSubmitting = _ref2.isSubmitting;\n    return __jsx(StyledForm, null, __jsx(\"label\", {\n      htmlFor: \"email\"\n    }, \"Get Informed Every Week!\"), __jsx(Field, {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Your email...\"\n    }), __jsx(StyledError, {\n      name: \"email\",\n      compoenent: \"div\"\n    }), __jsx(\"button\", {\n      type: \"submit\",\n      disabled: isSubmitting\n    }, \"Submit\"));\n  });\n});","map":null,"metadata":{},"sourceType":"module"}