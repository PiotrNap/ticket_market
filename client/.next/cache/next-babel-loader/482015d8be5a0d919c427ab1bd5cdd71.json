{"ast":null,"code":"var _jsxFileName = \"/Users/piotrnapierala/Desktop/microservices/ticketing/client/components/register.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport theme from '../components/styles/theme';\nimport { device } from '../components/styles/device';\nimport styled from 'styled-components';\nconst {\n  colors,\n  fontSizes\n} = theme;\nconst StyledForm = styled(Form).withConfig({\n  displayName: \"register__StyledForm\",\n  componentId: \"sc-1h70zzu-0\"\n})([\"display:flex;flex-direction:column;\"]);\nexport default (() => {\n  return __jsx(Formik, {\n    onSubmit: async values => {\n      await new Promise(res => setTimeout(res, 500));\n      alert(JSON.stringify(values, null, 2));\n    },\n    initialValues: {\n      email: ''\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email('You should change something!').required('Your email is required.')\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, ({\n    isSubmitting\n  }) => __jsx(StyledForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"Get Informed Every Week!\"), __jsx(Field, {\n    type: \"email\",\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), __jsx(ErrorMessage, {\n    name: \"email\",\n    compoenent: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Submit\")));\n});","map":{"version":3,"sources":["/Users/piotrnapierala/Desktop/microservices/ticketing/client/components/register.js"],"names":["React","Formik","Form","Field","ErrorMessage","Yup","theme","device","styled","colors","fontSizes","StyledForm","values","Promise","res","setTimeout","alert","JSON","stringify","email","object","shape","string","required","isSubmitting"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,SAASC,MAAT,QAAuB,6BAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAM;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,IAAwBJ,KAA9B;AAEA,MAAMK,UAAU,GAAGH,MAAM,CAACN,IAAD,CAAT;AAAA;AAAA;AAAA,2CAAhB;AAiBA,gBAAe,MAAM;AACnB,SACE,MAAC,MAAD;AACE,IAAA,QAAQ,EAAE,MAAOU,MAAP,IAAkB;AAC1B,YAAM,IAAIC,OAAJ,CAAaC,GAAD,IAASC,UAAU,CAACD,GAAD,EAAM,GAAN,CAA/B,CAAN;AACAE,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeN,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACD,KAJH;AAKE,IAAA,aAAa,EAAE;AAAEO,MAAAA,KAAK,EAAE;AAAT,KALjB;AAME,IAAA,gBAAgB,EAAEd,GAAG,CAACe,MAAJ,GAAaC,KAAb,CAAmB;AACnCF,MAAAA,KAAK,EAAEd,GAAG,CAACiB,MAAJ,GACJH,KADI,CACE,8BADF,EAEJI,QAFI,CAEK,yBAFL;AAD4B,KAAnB,CANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KACC,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,YAAD;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,UAAU,EAAC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAEA,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CAbJ,CADF;AAyBD,CA1BD","sourcesContent":["import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport theme from '../components/styles/theme';\nimport { device } from '../components/styles/device';\nimport styled from 'styled-components';\n\nconst { colors, fontSizes } = theme;\n\nconst StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n\n  /* label {\n    font-size: ${fontSizes.large}\n    font-wieght: 600;\n    margin-bottom: ${theme.mbMd}\n  } \n    fiel\n  \n  */\n\n\n\n`;\n\nexport default () => {\n  return (\n    <Formik\n      onSubmit={async (values) => {\n        await new Promise((res) => setTimeout(res, 500));\n        alert(JSON.stringify(values, null, 2));\n      }}\n      initialValues={{ email: '' }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('You should change something!')\n          .required('Your email is required.'),\n      })}\n    >\n      {({ isSubmitting }) => (\n        <StyledForm>\n          <label htmlFor='email'>Get Informed Every Week!</label>\n          <Field type='email' name='email' />\n          <ErrorMessage name='email' compoenent='div' />\n          <button type='submit' disabled={isSubmitting}>\n            Submit\n          </button>\n        </StyledForm>\n      )}\n    </Formik>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}